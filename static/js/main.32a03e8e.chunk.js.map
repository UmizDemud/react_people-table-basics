{"version":3,"sources":["components/Navigation/Navigation.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navigation","location","useLocation","className","role","classNames","pathname","to","startsWith","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","map","localeCompare","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","loading","setLoading","error","setError","useEffect","ppl","find","catch","length","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.32a03e8e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Navigation = () => {\n  const location = useLocation();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link\n            className={classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': location.pathname === '/' },\n            )}\n            to=\"/\"\n          >\n            Home\n          </Link>\n\n          <Link\n            className={classNames(\n              'navbar-item',\n              {\n                'has-background-grey-lighter': location\n                  .pathname.startsWith('/people'),\n              },\n            )}\n            to=\"/people\"\n          >\n            People\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\nconst API_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink = ({ person }: Props) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonLink } from '../PersonLink';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable = ({ people }: Props) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames(\n              {\n                'has-background-warning': person.slug\n                  .localeCompare(slug || '') === 0,\n              },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              { person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n            <td>\n              { person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Person } from '../../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then(ppl => {\n        setLoading(false);\n        setPeople(ppl.map(person => ({\n          ...person,\n          mother: ppl\n            .find(mother => mother.name === person.motherName),\n          father: ppl\n            .find(father => father.name === person.fatherName),\n        })));\n      })\n      .catch(() => {\n        setError(true);\n      });\n  }, []);\n\n  if (error) {\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      </>\n    );\n  }\n\n  if (!loading && !people.length) {\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {loading\n            ? <Loader />\n            : <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />} />\n            <Route path=\"/people/:slug\" element={<PeoplePage />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}